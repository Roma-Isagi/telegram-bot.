from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import requests

BOT_TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–û–¢_BOTFATHER"  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

# üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user}! üëã\n"
        "–Ø —É–º–µ—é —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑:\n"
        "üìå TikTok\nüìå Instagram\n\n"
        "–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É, –∏ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ –¥–ª—è —Ç–µ–±—è üì•"
    )

# üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å—Å—ã–ª–æ–∫
async def handle_links(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()

    if "tiktok.com" in url:
        await download_tiktok(update, url)
    elif "instagram.com" in url:
        await download_instagram(update, url)
    else:
        await update.message.reply_text("üòï –Ø –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –∏–∑ TikTok –∏ Instagram.")

# üìπ TikTok –∑–∞–≥—Ä—É–∑–∫–∞
async def download_tiktok(update, url):
    await update.message.reply_text("üì≤ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ TikTok...")
    try:
        api_url = f"https://tikwm.com/api/?url={url}"
        response = requests.get(api_url)
        data = response.json()
        video_url = data["data"]["play"]
        await update.message.reply_video(video=video_url)
    except:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å TikTok-–≤–∏–¥–µ–æ.")

# üì∑ Instagram –∑–∞–≥—Ä—É–∑–∫–∞
async def download_instagram(update, url):
    await update.message.reply_text("üì≤ –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –∏–∑ Instagram...")
    try:
        api = "https://saveig.app/api/ajaxSearch"
        headers = {
            "x-requested-with": "XMLHttpRequest",
            "referer": "https://saveig.app/"
        }
        payload = {"q": url}
        response = requests.post(api, data=payload, headers=headers)
        data = response.json()

        if "data" in data and len(data["data"]) > 0:
            video_url = data["data"][0]["url"]
            await update.message.reply_video(video=video_url)
        else:
            await update.message.reply_text("‚ö†Ô∏è –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ –æ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ.")
    except:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ Instagram-–≤–∏–¥–µ–æ.")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_links))
app.run_polling()